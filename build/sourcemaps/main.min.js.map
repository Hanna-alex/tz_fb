{"version":3,"sources":["scripts/add-text.js","scripts/hover.js","scripts/render-card-food.js","scripts/selected-card.js","01_main.js"],"names":["addTextOffers","document","querySelectorAll","cardsWeight","cardsContainer","offers","i","length","key","outerText","forEach","element","isNum","parseInt","isFinite","insertAdjacentHTML","replace","hoverCards","foodCards","containDescription","mouseOver","elem","elems","closest","backElems","price","querySelector","classList","contains","tagline","innerText","selectedHoverTagline","style","color","add","backElem","mouseLeave","defaultHoverTagline","remove","addEventListener","event","card","targetClass","target","className","back","render","goodsArr","containerGoods","brand","goodsIngArr","ing","goodsW","w","defaultCardText","defaultCardTextBtn","selected","cardFood","borderElems","toggle","borderElem","addTextSelected","textContainer","cardIngregient","textContent","selectedCardText","innerHTML","goods"],"mappings":"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","file":"../components/main.min.js","sourcesContent":["function addTextOffers() {\r\n  const cards = document.querySelectorAll('.card-food');\r\n  const cardsWeight = document.querySelectorAll('.card-food__num');\r\n  const cardsContainer = document.querySelectorAll('.card-food__offer')\r\n\r\n  const offers = {\r\n    '0,5': ['10 порций', 'мышь в подарок'],\r\n    2: ['40 порций', '2 мыши в подарок'],\r\n    5: ['100 порций', '5 мышей в подарок', 'заказчик доволен'],\r\n  };\r\n\r\n\r\n  for (let i = 0; i < cardsWeight.length; i++) {\r\n\r\n    for (let key in offers) {\r\n      if (key === cardsWeight[i].outerText) {\r\n        offers[key].forEach(element => {\r\n\r\n          let isNum = parseInt(element)\r\n          if (isFinite(isNum)) {\r\n            cardsContainer[i].insertAdjacentHTML('beforeend', `\r\n      <span class=\"card-food__text\"><b>${isNum} </b> ${element.replace(/[0-9]/g, '')} </span>\r\n     `);\r\n\r\n          } else {\r\n            cardsContainer[i].insertAdjacentHTML('beforeend', `\r\n      <span class=\"card-food__text\"> ${element.replace(/[0-9]/g, '')} </span>\r\n     `);\r\n\r\n          }\r\n\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n","function hoverCards() {\r\n\r\n  const foodCards = document.querySelectorAll('.card-food');\r\n  const containDescription = document.querySelectorAll('.card-food__description');\r\n\r\n\r\n\r\n  containDescription.forEach(elem => {\r\n    elem.addEventListener('mouseover', (event) => {\r\n\r\n      const card = elem.closest('.card-food');\r\n      const targetClass = event.target.className;\r\n\r\n      if (targetClass === 'card-food__btn' || targetClass === 'card-food__btn_text' && !card.classList.contains('card-food_disabled')) mouseOver(elem)\r\n    })\r\n  })\r\n\r\n  containDescription.forEach(elem => {\r\n    elem.addEventListener('mouseout', (event) => {\r\n      const card = elem.closest('.card-food');\r\n      const targetClass = event.target.className;\r\n\r\n      if (targetClass === 'card-food__btn' || targetClass === 'card-food__btn_text' && !card.classList.contains('card-food_disabled')) mouseLeave(elem)\r\n    })\r\n  })\r\n\r\n\r\n  foodCards.forEach(elem => {\r\n    if (!elem.classList.contains('card-food_disabled')) {\r\n\r\n      const back = elem.querySelector('.back');\r\n\r\n      back.addEventListener('mouseenter', () => {\r\n        mouseOver(back)\r\n      });\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n  foodCards.forEach(elem => {\r\n    if (!elem.classList.contains('card-food_disabled')) {\r\n      const back = elem.querySelector('.back');\r\n\r\n      back.addEventListener('mouseleave', () => {\r\n\r\n        mouseLeave(back)\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n  function mouseOver(elem) {\r\n    // console.log(elem);\r\n    const elems = elem.closest('.card-food');\r\n    const backElems = elems.querySelectorAll('.back__elem');\r\n    const price = elems.querySelector('.card-food__price');\r\n\r\n\r\n    if (elems.classList.contains('card-food_selected')) {\r\n\r\n      let tagline = elems.querySelector('.card-food__tagline')\r\n\r\n      tagline.innerText = '';\r\n      tagline.innerText = selectedHoverTagline;\r\n      tagline.style.color = '#E62E7A';\r\n\r\n      price.classList.add('card-food__price_selected-hover')\r\n\r\n      backElems.forEach(backElem => {\r\n        backElem.classList.add('back__elem_selected-hover');\r\n\r\n      })\r\n\r\n    } else {\r\n\r\n      price.classList.add('card-food__price_hover')\r\n\r\n      backElems.forEach(backElem => {\r\n        backElem.classList.add('back__elem_hover')\r\n\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function mouseLeave(elem) {\r\n\r\n    const elems = elem.closest('.card-food');\r\n    const backElems = elems.querySelectorAll('.back__elem');\r\n    const price = elems.querySelector('.card-food__price');\r\n\r\n\r\n\r\n    if (elems.classList.contains('card-food_selected')) {\r\n\r\n      let tagline = elems.querySelector('.card-food__tagline')\r\n\r\n      tagline.innerText = '';\r\n      tagline.innerText = defaultHoverTagline;\r\n      tagline.style.color = ' #666666';\r\n\r\n      price.classList.remove('card-food__price_selected-hover')\r\n\r\n      backElems.forEach(backElem => {\r\n        backElem.classList.remove('back__elem_selected-hover');\r\n\r\n      })\r\n\r\n    } else {\r\n\r\n      price.classList.remove('card-food__price_hover', 'card-food__price_selected-hover');\r\n\r\n      backElems.forEach(backElem => {\r\n        backElem.classList.remove('back__elem_hover', 'back__elem_selected-hover');\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n}\r\n\r\n","function render(goodsArr) {\r\n\r\n\r\n  const containerGoods = document.querySelector('.feet-the-cat__wrapper')\r\n\r\n  for (let brand in goodsArr) {\r\n\r\n    const goodsIngArr = goodsArr[brand]; ///arrINg\r\n\r\n\r\n    for (let ing in goodsIngArr) {\r\n\r\n      const goodsW = goodsIngArr[ing] //arrW\r\n\r\n\r\n\r\n\r\n\r\n      for (let w in goodsW) {\r\n\r\n        if (+goodsW[w] > 0) {\r\n\r\n          containerGoods.insertAdjacentHTML('beforeend', `\r\n          <div class=\"feet-the-cat__card card-food\">\r\n            <div class=\"card-food__back back\">\r\n              <div class=\"back__elem back__elem_parallelogram\"></div>\r\n              <!-- /.card-food__parallelogram -->\r\n              <div class=\"back__elem back__elem_corner\"></div>\r\n              <!-- /.card-food__corner -->\r\n\r\n                      <div class=\"back__elem back__elem_lower\">\r\n                          <div class=\"back__img\">\r\n                            <img src=\"img/cart-food-bg.png\" alt=\"Cat\" />\r\n                          </div>\r\n                        <!-- /.back__img -->\r\n                      </div>\r\n                      <!-- /.card-food__lower -->\r\n\r\n              <div class=\"card-food__info\">\r\n                <span class=\"card-food__tagline\">${defaultHoverTagline}</span>\r\n                <h3 class=\"card-food__title\">${brand}</h3>\r\n                <h4 class=\"card-food__subtitle\">${ing}</h4>\r\n                <div class=\"card-food__offer\">\r\n                  <span class=\"card-food__text\"> </span>\r\n                </div>\r\n                <!-- /.card-food__offer -->\r\n                <div class=\"card-food__price\">\r\n                  <span class=\"card-food__num\">${w}</span>\r\n                  <span class=\"card-food__unit\">кг</span>\r\n                </div>\r\n                <!-- /.card-food__price -->\r\n              </div>\r\n              <!-- /.card-food__info -->\r\n            </div>\r\n            <!-- /.card-food__back -->\r\n            <div class=\"card-food__description description\">\r\n            <p class=\"description__text\">\r\n                ${defaultCardText} </p> \r\n            <button class=\"card-food__btn\"> <span class=\"card-food__btn_text\"> ${defaultCardTextBtn}</span>.\r\n           </button>\r\n            </div>\r\n            <!-- /.card-food__description -->\r\n          </div>\r\n          <!-- /.card-food -->\r\n          `)\r\n        } else if (goodsW[w] === 0) {\r\n          containerGoods.insertAdjacentHTML('beforeend', `\r\n          <div class=\"feet-the-cat__card card-food card-food_disabled\">\r\n            <div class=\"card-food__back back\">\r\n              <div class=\"back__elem back__elem_disabled back__elem_parallelogram\"></div>\r\n              <!-- /.card-food__parallelogram -->\r\n              <div class=\"back__elem back__elem_disabled  back__elem_corner\"></div>\r\n              <!-- /.card-food__corner -->\r\n\r\n                      <div class=\"back__elem back__elem_disabled back__elem_lower\">\r\n                          <div class=\"back__img back__img_disabled\">\r\n                            <img src=\"img/cart-food-bg.png\" alt=\"Cat\" />\r\n                          </div>\r\n                        <!-- /.back__img -->\r\n                      </div>\r\n                      <!-- /.card-food__lower -->\r\n\r\n              <div class=\"card-food__info\">\r\n                <span class=\"card-food__tagline\">${defaultHoverTagline}</span>\r\n                <h3 class=\"card-food__title\">${brand}</h3>\r\n                <h4 class=\"card-food__subtitle\">${ing}</h4>\r\n                <div class=\"card-food__offer\">\r\n                  <span class=\"card-food__text\"> </span>\r\n                </div>\r\n                <!-- /.card-food__offer -->\r\n                <div class=\"card-food__price card-food__price_disabled\">\r\n                  <span class=\"card-food__num\">${w}</span>\r\n                  <span class=\"card-food__unit\">кг</span>\r\n                </div>\r\n                <!-- /.card-food__price -->\r\n              </div>\r\n              <!-- /.card-food__info -->\r\n            </div>\r\n            <!-- /.card-food__back -->\r\n            <div class=\"card-food__description description description_disabled\">\r\n            <p class=\"description__text\">\r\n               Печалька, ${ing} закончился. </p> \r\n            <button class=\"card-food__btn\"></button>\r\n            </div>\r\n            <!-- /.card-food__description -->\r\n          </div>\r\n          <!-- /.card-food -->\r\n          `)\r\n        }\r\n      }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","function selected() {\r\n  const foodCards = document.querySelectorAll('.card-food');\r\n  const containDescriptions = document.querySelectorAll('.card-food__description');\r\n\r\n\r\n  containDescriptions.forEach(elem => {\r\n    elem.addEventListener('click', (event) => {\r\n\r\n      const target = event.target.className\r\n\r\n      if (target === 'card-food__btn' || target === 'card-food__btn_text') selected(elem)\r\n\r\n    })\r\n  })\r\n\r\n\r\n  foodCards.forEach(elem => {\r\n    elem.addEventListener('click', (event) => {\r\n\r\n      const target = event.target.className\r\n\r\n      if (target === 'card-food__info' && !elem.classList.contains('card-food_disabled')) selected(elem)\r\n\r\n    })\r\n\r\n  });\r\n\r\n\r\n\r\n  function selected(card) {\r\n    const cardFood = card.closest('.card-food');\r\n    const borderElems = cardFood.querySelectorAll('.back__elem');\r\n    const price = cardFood.querySelector('.card-food__price');\r\n\r\n\r\n    cardFood.classList.toggle('card-food_selected')\r\n    borderElems.forEach(borderElem => {\r\n      borderElem.classList.toggle('back__elem_selected');\r\n    })\r\n\r\n    price.classList.toggle('card-food__price_selected');\r\n\r\n    addTextSelected(card)\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction addTextSelected(elem) {\r\n\r\n  const cardFood = elem.closest('.card-food');\r\n  const textContainer = cardFood.querySelector('.card-food__description');;\r\n  const cardIngregient = cardFood.querySelector('.card-food__subtitle').textContent;\r\n\r\n\r\n  if (cardFood.classList.contains('card-food_selected')) {\r\n\r\n    for (let key in selectedCardText) {\r\n\r\n      if (key === cardIngregient) {\r\n\r\n        textContainer.innerHTML = ''\r\n        textContainer.insertAdjacentHTML('beforeend', `<p class=\"description__text\">\r\n         ${selectedCardText[key]} </p>`);\r\n\r\n      }\r\n    }\r\n\r\n  } else {\r\n\r\n    const backElems = cardFood.querySelectorAll('.back__elem');\r\n    backElems.forEach(backElem => {\r\n      backElem.classList.remove('back__elem_selected-hover');\r\n    })\r\n\r\n    const price = cardFood.querySelector('.card-food__price');\r\n    price.classList.remove('card-food__price_selected-hover');\r\n    let tagline = cardFood.querySelector('.card-food__tagline')\r\n\r\n    tagline.innerText = '';\r\n    tagline.innerText = defaultHoverTagline;\r\n    tagline.style.color = ' #666666';\r\n\r\n    textContainer.innerHTML = '';\r\n    textContainer.insertAdjacentHTML('beforeend', `<p class=\"description__text\">\r\n                                      ${defaultCardText} </p> \r\n                                    <button class=\"card-food__btn\"> <span class=\"card-food__btn_text\"> ${defaultCardTextBtn}</span>.\r\n                                    </button>`);\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n","const goods = {\r\n  'Нямушка': {\r\n    'с фуа-гра': {\r\n      '0,5': 10,\r\n      '2': null,\r\n      '5': null,\r\n    },\r\n    'с рыбой': {\r\n      '0,5': null,\r\n      '2': 10,\r\n      '5': null,\r\n    },\r\n    'с курой': {\r\n      '0,5': null,\r\n      '2': null,\r\n      '5': 0,\r\n    },\r\n\r\n  },\r\n  // 'Кусь': {\r\n  //   'с фуа-гра': {\r\n  //     '0,5': 11,\r\n  //     '2': 0,\r\n  //     '5': 0,\r\n  //   },\r\n  // },\r\n\r\n}\r\n\r\nconst selectedCardText = {\r\n  'с фуа-гра': 'Печень утки разварная с артишоками.',\r\n  'с рыбой': 'Головы щучьи с чесноком да свежайшая сёмгушка.',\r\n  'с курой': 'Филе из цыплят с трюфелями в бульоне.',\r\n\r\n};\r\n\r\nconst defaultCardText = 'Чего сидишь? Порадуй котэ,';\r\nconst defaultCardTextBtn = 'купи';\r\n\r\nconst defaultHoverTagline = 'Сказочное заморское яство';\r\nconst selectedHoverTagline = 'Котэ не одобряет?';\r\n\r\n\r\n\r\n\r\nrender(goods)\r\n\r\naddTextOffers()\r\nhoverCards()\r\nselected()"]}